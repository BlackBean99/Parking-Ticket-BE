plugins {
    id 'java'
    id 'com.google.cloud.tools.jib' version '3.4.0'
}

group = 'com.jnu'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.12'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
    implementation group: 'software.amazon.awssdk', name: 'ses', version: "2.19.29"
    testImplementation 'org.springframework.security:spring-security-test'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
    implementation project(':Ticket-Domain')
    implementation project(':Ticket-Common')
    implementation project(':Ticket-Infrastructure')

}

tasks.named('test') {
    useJUnitPlatform()
}

jib {
    def serverPort = "8080"
    def dockerUsername = System.getenv("DOCKER_USERNAME")
    def dockerPassword = System.getenv("DOCKER_PASSWORD")
    def imageName = System.getenv("IMAGE_NAME")

    from {
        image = 'amazoncorretto:17-alpine3.17-jdk'
    }
    to {
        image = imageName + ':latest'
        tags = ['latest']
        auth {
            username = dockerUsername ? dockerUsername : ""
            password = dockerPassword ? dockerPassword : ""
        }
    }
    container {
        jvmFlags = [
                '-Dspring.profiles.active=prod',
                '-Dserver.port=' + serverPort,
                '-Xms2G', '-Xmx2G',
                '-XX:+UseG1GC',
                '-XX:+UseContainerSupport',
                '-XX:+DisableExplicitGC',
                '-server'
        ]
        environment = [
                'MYSQL_HOST'    : System.getenv("MYSQL_HOST"),
                'MYSQL_PORT'    : System.getenv("MYSQL_PORT"),
                'MYSQL_DATABASE': System.getenv("MYSQL_DATABASE"),
                'MYSQL_USERNAME': System.getenv("MYSQL_USERNAME"),
                'MYSQL_PASSWORD': System.getenv("MYSQL_PASSWORD"),
                'JWT_SECRET'    : System.getenv("JWT_SECRET")
        ]
        ports = ['8080']
    }
}